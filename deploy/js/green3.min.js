var Cube={};Cube.core={};Cube.core.math={};Cube.core.math.Vector3=function(a,d,c){this.set(a,d,c)};Cube.core.math.Vector3.prototype={constructor:Cube.core.math.Vector3,getX:function(){return this.x},getY:function(){return this.y},getZ:function(){return this.z},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},set:function(a,d,c){this.x=a||0;this.y=d||0;this.z=c||0;return this},setFrom:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},add:function(a){return new Cube.core.math.Vector3(this.x+a.x,this.y+a.y,this.z+a.z)},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},sub:function(a){return new Cube.core.math.Vector3(this.x-a.x,this.y-a.y,this.z-a.z)},scaleSelf:function(a){this.x*=a;this.y*=a;this.z*=a;return this},scale:function(a){return new Cube.core.math.Vector3(a*this.x,a*this.y,a*this.z)},cross:function(d){var f=this.x;var c=this.y;var h=this.z;var g=d.x;var e=d.y;var a=d.z;return new Cube.core.math.Vector3(c*a-h*e,h*g-f*a,f*e-c*g)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},length:function(){return this.dot(this)},normalizeSelf:function(){return this.scaleSelf(this.length())}};Cube.core.math.Matrix4=function(){this.data=new Float32Array(16)};Cube.core.math.Matrix4.prototype={constructor:Cube.core.math.Matrix4,clone:function(){return(new Cube.core.math.Matrix4()).initFromRawData(this.data)},copyTo:function(c){var e=this.data;var a=c.data;for(var d=0;d<16;++d){a[d]=e[d]}return this},initToIdentity:function(){return this.initFromRawData(Cube.core.math.Matrix4.rawdata_identity)},initFromRawData:function(c){var a;for(a=0;a<16;++a){this.data[a]=c[a]}return this},getRawData:function(){return this.data},setElement:function(a,d,c){this.data[d*4+a]=c;return this},multiply:function(a){var c=this.clone();return c.multiplyToSelf(a)},invertTo:function(d){var h=this.data;var q=d.data;var n=h[0*4+0],m=h[1*4+0],k=h[2*4+0],i=h[3*4+0];var u=h[0*4+1],t=h[1*4+1],s=h[2*4+1],r=h[3*4+1];var g=h[0*4+2],f=h[1*4+2],e=h[2*4+2],c=h[3*4+2];var p=h[0*4+3],o=h[1*4+3],l=h[2*4+3],j=h[3*4+3];var a=this.determinant();q[0*4+0]=s*c*o-r*e*o+r*f*l-t*c*l-s*f*j+t*e*j;q[1*4+0]=i*e*o-k*c*o-i*f*l+m*c*l+k*f*j-m*e*j;q[2*4+0]=k*r*o-i*s*o+i*t*l-m*r*l-k*t*j+m*s*j;q[3*4+0]=i*s*f-k*r*f-i*t*e+m*r*e+k*t*c-m*s*c;q[0*4+1]=r*e*p-s*c*p-r*g*l+u*c*l+s*g*j-u*e*j;q[1*4+1]=k*c*p-i*e*p+i*g*l-n*c*l-k*g*j+n*e*j;q[2*4+1]=i*s*p-k*r*p-i*u*l+n*r*l+k*u*j-n*s*j;q[3*4+1]=k*r*g-i*s*g+i*u*e-n*r*e-k*u*c+n*s*c;q[0*4+2]=t*c*p-r*f*p+r*g*o-u*c*o-t*g*j+u*f*j;q[1*4+2]=i*f*p-m*c*p-i*g*o+n*c*o+m*g*j-n*f*j;q[2*4+2]=m*r*p-i*t*p+i*u*o-n*r*o-m*u*j+n*t*j;q[3*4+2]=i*t*g-m*r*g-i*u*f+n*r*f+m*u*c-n*t*c;q[0*4+3]=s*f*p-t*e*p-s*g*o+u*e*o+t*g*l-u*f*l;q[1*4+3]=m*e*p-k*f*p+k*g*o-n*e*o-m*g*l+n*f*l;q[2*4+3]=k*t*p-m*s*p-k*u*o+n*s*o+m*u*l-n*t*l;q[3*4+3]=m*s*g-k*t*g+k*u*f-n*s*f-m*u*e+n*t*e;d.scaleToSelf(1/a);return this},invertToSelf:function(){return this.invertTo(this)},determinant:function(){var f=this.data;var l=f[0*4+0],j=f[1*4+0],h=f[2*4+0],g=f[3*4+0];var s=f[0*4+1],r=f[1*4+1],q=f[2*4+1],p=f[3*4+1];var e=f[0*4+2],d=f[1*4+2],c=f[2*4+2],a=f[3*4+2];var n=f[0*4+3],m=f[1*4+3],k=f[2*4+3],i=f[3*4+3];var o=g*q*d*n-h*p*d*n-g*r*c*n+j*p*c*n+h*r*a*n-j*q*a*n-g*q*e*m+h*p*e*m+g*s*c*m-l*p*c*m-h*s*a*m+l*q*a*m+g*r*e*k-j*p*e*k-g*s*d*k+l*p*d*k+j*s*a*k-l*r*a*k-h*r*e*i+j*q*e*i+h*s*d*i-l*q*d*i-j*s*c*i+l*r*c*i;return o},multiplyTo:function(c,a){var d=this.data;var y=c.data;var z=a.data;var i=d[0*4+0],g=d[1*4+0],f=d[2*4+0],e=d[3*4+0];var D=d[0*4+1],C=d[1*4+1],B=d[2*4+1],A=d[3*4+1];var t=d[0*4+2],s=d[1*4+2],r=d[2*4+2],q=d[3*4+2];var l=d[0*4+3],k=d[1*4+3],j=d[2*4+3],h=d[3*4+3];var J=y[0*4+0],H=y[1*4+0],F=y[2*4+0],E=y[3*4+0];var x=y[0*4+1],w=y[1*4+1],v=y[2*4+1],u=y[3*4+1];var p=y[0*4+2],o=y[1*4+2],n=y[2*4+2],m=y[3*4+2];var L=y[0*4+3],K=y[1*4+3],I=y[2*4+3],G=y[3*4+3];z[0*4+0]=i*J+g*x+f*p+e*L;z[1*4+0]=i*H+g*w+f*o+e*K;z[2*4+0]=i*F+g*v+f*n+e*I;z[3*4+0]=i*E+g*u+f*m+e*G;z[0*4+1]=D*J+C*x+B*p+A*L;
z[1*4+1]=D*H+C*w+B*o+A*K;z[2*4+1]=D*F+C*v+B*n+A*I;z[3*4+1]=D*E+C*u+B*m+A*G;z[0*4+2]=t*J+s*x+r*p+q*L;z[1*4+2]=t*H+s*w+r*o+q*K;z[2*4+2]=t*F+s*v+r*n+q*I;z[3*4+2]=t*E+s*u+r*m+q*G;z[0*4+3]=l*J+k*x+j*p+h*L;z[1*4+3]=l*H+k*w+j*o+h*K;z[2*4+3]=l*F+k*v+j*n+h*I;z[3*4+3]=l*E+k*u+j*m+h*G;return this},multiplyToSelf:function(a){return this.multiplyTo(a,this)},scaleToSelf:function(c){var a;var d=this.data;for(a=0;a<4*4;++a){d[a]*=c}return this},transposeTo:function(c){var g=this.data;var p=c.data;var m=g[0*4+0],l=g[1*4+0],j=g[2*4+0],h=g[3*4+0];var t=g[0*4+1],s=g[1*4+1],r=g[2*4+1],q=g[3*4+1];var f=g[0*4+2],e=g[1*4+2],d=g[2*4+2],a=g[3*4+2];var o=g[0*4+3],n=g[1*4+3],k=g[2*4+3],i=g[3*4+3];p[0*4+0]=m;p[1*4+1]=s;p[2*4+2]=d;p[3*4+3]=i;p[1*4+0]=t;p[0*4+1]=l;p[2*4+0]=f;p[0*4+2]=j;p[3*4+0]=o;p[0*4+3]=h;p[2*4+1]=e;p[1*4+2]=r;p[3*4+1]=n;p[1*4+3]=q;p[3*4+2]=k;p[2*4+3]=a;return this},transposeToSelf:function(){return this.transposeTo(this)},setRotationFrom:function(c){var e=this.data;var a=c.data;for(var d=0;d<3*4+0;++d){e[d]=a[d]}return this},setTranslationFrom:function(c){var e=this.data;var a=c.data;for(var d=3*4+0;d<3*4+3;++d){e[d]=a[d]}return this},transformRawVector4:function(a){var d=[];var e=this.data;for(var c=0;c<3;++c){d[c]=a[0]*e[0*4+c]+a[1]*e[1*4+c]+a[2]*e[2*4+c]+a[3]*e[3*4+c]}return d}};Cube.core.math.Matrix4.rawdata_identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];Cube.core.math.Matrix4.identity=(new Cube.core.math.Matrix4()).initToIdentity();Cube.core.Utilities={buildName:(function(){var a=0;return function(){return"Node"+a++}})(),checkReference:function(a,c){if(!a){throw"invalid reference "+(c||"")}},checkType:function(c,a,d){if(!(c instanceof a)){throw"unexpected type "+(d||"")}}};Cube.core.RenderVisitor=function(a){Cube.core.Utilities.checkType(a.renderer,Cube.core.Renderer,"attribute.renderer should be of type Cube.core.Renderer");this.renderer=a.renderer};Cube.core.RenderVisitor.prototype={};Cube.core.RenderVisitor.prototype.constructor=Cube.core.RenderVisitor;Cube.core.RenderVisitor.prototype.visitArrayBegin=function(a){};Cube.core.RenderVisitor.prototype.visitArrayEnd=function(){};Cube.core.RenderVisitor.prototype.visitViewport=function(a){this.renderer.setViewport(a.getX(),a.getY(),a.getWidth(),a.getHeight())};Cube.core.RenderVisitor.prototype.visitOptic=function(a){this.renderer.loadProjectionTransformation(a.getMatrix())};Cube.core.RenderVisitor.prototype.visitTransform=function(a){this.renderer.loadModelTransformation(a.getMatrix());this.renderer.loadNormalTransformation(a.getNormal())};Cube.core.RenderVisitor.prototype.visitView=function(a){this.renderer.loadViewTransformation(a.getInvert())};Cube.core.RenderVisitor.prototype.visitBufferSet=function(a){this.renderer.renderBufferSet(this.renderer.mode.ELEMENT,a)};Cube.core.RenderVisitor.prototype.visitShader=function(a){this.renderer.useShader(a)};Cube.core.RenderVisitor.prototype.visitTexture=function(a){this.renderer.useTexture(a)};Cube.core.RenderVisitor.prototype.visitMaterial=function(a){this.renderer.deactivateAllTextureUnits();this.renderer.deactivateAllLights();this.renderer.setTransparentMode(a.isTransparent());this.renderer.setInsideOutMode(a.isInsideOut())};Cube.core.RenderVisitor.prototype.visitMaterialBinding=function(d){var a=d.getParameterName();var e=d.getParameterType();var c=d.getParameterValue();this.renderer.bindShaderParamWithValue(a,e,c)};Cube.core.RenderVisitor.prototype.visitLightAmbiant=function(a){this.renderer.addAmbiantLight(a)};Cube.core.RenderVisitor.prototype.visitLightDirectional=function(a){this.renderer.addDirectionalLight(a)};Cube.core.RenderVisitor.prototype.visitLightPositional=function(a){this.renderer.addPositionalLight(a)};Cube.core.Node=function(a){this.name=a.name||Cube.core.Utilities.buildName()};Cube.core.Node.prototype={};Cube.core.Node.prototype.constructor=Cube.core.Node;Cube.core.Node.prototype.accept=null;Cube.core.Node.prototype.getName=function(){return this.name};Cube.core.ArrayNode=function(a){Cube.core.Node.call(this,a);this.nodes=a.nodes||[]
};Cube.core.ArrayNode.prototype=new Cube.core.Node({});Cube.core.ArrayNode.prototype.constructor=Cube.core.ArrayNode;Cube.core.ArrayNode.prototype.accept=function(d){d.visitArrayBegin(this.nodes.length);var a;for(a=0;a<this.nodes.length;++a){var c=this.nodes[a];c.accept(d)}d.visitArrayEnd()};Cube.core.ArrayNode.prototype.at=function(a){return this.nodes[a]};Cube.core.ArrayNode.prototype.push=function(a){this.nodes.push(a)};Cube.core.ArrayNode.prototype.clear=function(a){this.nodes.splice(a);return this};Cube.core.BufferSetNode=function(a){Cube.core.Node.call(this,a);this.factory=a.factory};Cube.core.BufferSetNode.prototype=new Cube.core.Node({});Cube.core.BufferSetNode.prototype.constructor=Cube.core.BufferSetNode;Cube.core.BufferSetNode.prototype.createAttributeBuffer=function(a,c){return this.createBuffer(a,new Float32Array(c),false)};Cube.core.BufferSetNode.prototype.createIndexBuffer=function(a,c){return this.createBuffer(a,new Uint16Array(c),true)};Cube.core.BufferSetNode.prototype.createBuffer=function(c,d,a){this[c+"Buffer"]=this.buildBuffer(a,d,this.factory);return this};Cube.core.BufferSetNode.prototype.accept=function(a){a.visitBufferSet(this)};Cube.core.BufferSetNode.prototype.buildBuffer=function(c,d,a){return{size:d.length,data:a(c,d)}};Cube.core.OutputToBufferSet=function(a){this.hasVertex=!!a.hasVertex;this.hasNormal=!!a.hasNormal;this.hasColor=!!a.hasColor;this.hasUV=!!a.hasUV;this.hasTangent=!!a.hasTangent;this.hasIndex=!!a.hasIndex;this.factory=a.factory;this.vertex=null;this.normal=null;this.color=null;this.uv=null;this.tangent=null;this.index=null};Cube.core.OutputToBufferSet.prototype={};Cube.core.OutputToBufferSet.prototype.constructor=Cube.core.OutputToBufferSet;Cube.core.OutputToBufferSet.prototype.begin=function(a,c){if(!!this.hasVertex){this.vertex=[]}if(!!this.hasNormal){this.normal=[]}if(!!this.hasColor){this.color=[]}if(!!this.hasUV){this.uv=[]}if(!!this.hasTangent){this.tangent=[]}if(!!this.hasIndex){this.index=[]}};Cube.core.OutputToBufferSet.prototype.end=function(){var a=new Cube.core.BufferSetNode({factory:this.factory});if(!!this.hasVertex){a.createAttributeBuffer("vertex",this.vertex)}if(!!this.hasNormal){a.createAttributeBuffer("normal",this.normal)}if(!!this.hasColor){a.createAttributeBuffer("color",this.color)}if(!!this.hasUV){a.createAttributeBuffer("uv",this.uv)}if(!!this.hasTangent){a.createAttributeBuffer("tangent",this.tangent)}if(!!this.hasIndex){a.createIndexBuffer("index",this.index)}return a};Cube.core.OutputToBufferSet.prototype.addVertex=function(a,d,c){if(!this.hasVertex){return}this.vertex.push(a);this.vertex.push(d);this.vertex.push(c)};Cube.core.OutputToBufferSet.prototype.addNormal=function(a,d,c){if(!this.hasNormal){return}this.normal.push(a);this.normal.push(d);this.normal.push(c)};Cube.core.OutputToBufferSet.prototype.addColor=function(f,e,c,d){if(!this.hasColor){return}this.color.push(f);this.color.push(e);this.color.push(c);this.color.push(d)};Cube.core.OutputToBufferSet.prototype.addUV=function(c,a){if(!this.hasUV){return}this.uv.push(c);this.uv.push(a)};Cube.core.OutputToBufferSet.prototype.addTangent=function(a,e,d,c){if(!this.hasTangent){return}this.tangent.push(a);this.tangent.push(e);this.tangent.push(d);this.tangent.push(c)};Cube.core.OutputToBufferSet.prototype.addTriplet=function(d,c,a){if(!this.hasIndex){return}this.index.push(d);this.index.push(c);this.index.push(a)};Cube.core.GeometryNode=function(a){Cube.core.Node.call(this,a)};Cube.core.GeometryNode.prototype=new Cube.core.Node({});Cube.core.GeometryNode.prototype.constructor=Cube.core.GeometryNode;Cube.core.GeometryNode.prototype.accept=function(a){a.visitGeometry(this)};Cube.core.MeshNode=function(a){checkGeometry(a.geometry);checkMaterial(a.material);this.geometry=a.geometry;this.material=a.material;this.nodes.push(this.material);this.nodes.push(this.geometry);Cube.core.ArrayNode.call(this,a)};Cube.core.MeshNode.prototype=new Cube.core.ArrayNode({});Cube.core.MeshNode.prototype.constructor=Cube.core.MeshNode;
Cube.core.MeshNode.prototype.checkGeometry=function(a){Cube.core.Utilities.checkReference(a);Cube.core.Utilities.checkType(a,Cube.core.GeometryNode);return a};Cube.core.MeshNode.prototype.checkMaterial=function(a){Cube.core.Utilities.checkReference(a);Cube.core.Utilities.checkType(a,Cube.core.MaterialNode);return a};Cube.core.OpticNode=function(a){Cube.core.Node.call(this,a);this.matrix=(new Cube.core.math.Matrix4()).initToIdentity();this.setup(a)};Cube.core.OpticNode.prototype=new Cube.core.Node({});Cube.core.OpticNode.prototype.constructor=Cube.core.OpticNode;Cube.core.OpticNode.prototype.accept=function(a){a.visitOptic(this)};Cube.core.OpticNode.prototype.setup=function(a){Cube.core.Utilities.checkReference(a);this.fov=a.fov||this.default_fov;this.ratio=a.ratio||this.default_ratio;this.near=a.near||this.default_near;this.far=a.far||this.default_far;this.updateMatrix()};Cube.core.OpticNode.prototype.updateMatrix=function(){var i=this.near*Math.tan(this.fov*0.5);var a=-i;var e=i*this.ratio;var h=-e;var g=2*this.near;var f=1/(e-h);var d=1/(i-a);var c=1/(this.far-this.near);this.matrix.initFromRawData([g*f,0,0,0,0,g*d,0,0,(e+h)*f,(i+a)*d,-(this.far+this.near)*c,-1,0,0,-(this.far*g)*c,0])};Cube.core.OpticNode.prototype.getMatrix=function(){return this.matrix};Cube.core.OpticNode.prototype.default_fov=Math.PI/2;Cube.core.OpticNode.prototype.default_ratio=1;Cube.core.OpticNode.prototype.default_near=1;Cube.core.OpticNode.prototype.default_far=1000;Cube.core.OrthographicOpticNode=function(a){Cube.core.Node.call(this,a);this.matrix=(new Cube.core.math.Matrix4()).initToIdentity();this.setup(a)};Cube.core.OrthographicOpticNode.prototype=new Cube.core.Node({});Cube.core.OrthographicOpticNode.prototype.constructor=Cube.core.OrthographicOpticNode;Cube.core.OrthographicOpticNode.prototype.accept=function(a){a.visitOptic(this)};Cube.core.OrthographicOpticNode.prototype.setup=function(a){Cube.core.Utilities.checkReference(a);this.fov=a.fov||this.default_fov;this.ratio=a.ratio||this.default_ratio;this.near=a.near||this.default_near;this.far=a.far||this.default_far;this.updateMatrix()};Cube.core.OrthographicOpticNode.prototype.updateMatrix=function(){var j=this.near*Math.tan(this.fov*0.5);var c=-j;var k=j*this.ratio;var e=-k;var g=2/(k-e);var d=2/(j-c);var i=-2/(this.far-this.near);var f=-(k+e)/(k-e);var a=-(j+c)/(j-c);var h=-(this.far+this.near)/(this.far-this.near);this.matrix.initFromRawData([g,0,0,0,0,d,0,0,0,0,i,0,f,a,h,1])};Cube.core.OrthographicOpticNode.prototype.getMatrix=function(){return this.matrix};Cube.core.OrthographicOpticNode.prototype.default_fov=Math.PI/2;Cube.core.OrthographicOpticNode.prototype.default_ratio=1;Cube.core.OrthographicOpticNode.prototype.default_near=1;Cube.core.OrthographicOpticNode.prototype.default_far=1000;Cube.core.TransformNode=function(a){Cube.core.Node.call(this,a);this.children=[];this.localMatrix=a.matrix||(new Cube.core.math.Matrix4()).initToIdentity();this.matrix=Cube.core.math.Matrix4.identity.clone();this.invert=Cube.core.math.Matrix4.identity.clone();this.normal=Cube.core.math.Matrix4.identity.clone();this.parent=a.parent||null;this.dirty=true;if(this.parent){this.parent.addChild(this)}};Cube.core.TransformNode.prototype=new Cube.core.Node({});Cube.core.TransformNode.prototype.constructor=Cube.core.TransformNode;Cube.core.TransformNode.prototype.accept=function(a){a.visitTransform(this)};Cube.core.TransformNode.prototype.setDirty=function(){if(this.dirty){return}this.dirty=true;this.children.forEach(function(a){a.setDirty()})};Cube.core.TransformNode.prototype.isDirty=function(){return this.dirty};Cube.core.TransformNode.prototype.setParent=function(a){this.parent=a;return this};Cube.core.TransformNode.prototype.addChild=function(a){this.children.push(a);return this};Cube.core.TransformNode.prototype.removeChild=function(a){this.children.filter(function(c){return c!=this});return this};Cube.core.TransformNode.prototype.orphan=function(){if(this.parent){this.parent.removeChild(this);this.parent=null
}return this};Cube.core.TransformNode.prototype.getLocalMatrix=function(){return this.localMatrix};Cube.core.TransformNode.prototype.getMatrix=function(){return this.matrix};Cube.core.TransformNode.prototype.getInvert=function(){return this.invert};Cube.core.TransformNode.prototype.getNormal=function(){return this.normal};Cube.core.TransformNode.prototype.updateLocal=function(){if(this.parent){this.parent.getMatrix().multiplyTo(this.localMatrix,this.matrix)}else{this.localMatrix.copyTo(this.matrix)}this.dirty=false;this.matrix.invertTo(this.invert);this.invert.transposeTo(this.normal)};Cube.core.TransformNode.prototype.findUpdateRoot=function(){if(this.parent&&this.parent.isDirty()){return this.parent.findUpdateRoot()}return this};Cube.core.TransformNode.prototype.updateDownStream=function(){this.updateLocal();this.children.forEach(function(a){a.updateDownStream()})};Cube.core.TransformNode.prototype.update=function(a){this.findUpdateRoot().updateDownStream();return this};Cube.core.RotationXYZNode=function(c){Cube.core.TransformNode.call(this,c);var a=c.x||0;var e=c.y||0;var d=c.z||0;this.vector=new Cube.core.math.Vector3(a,e,d);this.update()};Cube.core.RotationXYZNode.prototype=new Cube.core.TransformNode({});Cube.core.RotationXYZNode.prototype.constructor=Cube.core.RotationXYZNode;Cube.core.RotationXYZNode.prototype.set=function(a,d,c){if(!!a){this.vector.setX(a)}if(!!d){this.vector.setY(d)}if(!!c){this.vector.setZ(c)}this.setDirty();return this};Cube.core.RotationXYZNode.prototype.updateLocal=function(){var o=this.vector;var m=this.getLocalMatrix();var n=o.x,k=o.y,j=o.z;var f=Math.cos(n),l=Math.sin(n);var e=Math.cos(k),i=Math.sin(k);var d=Math.cos(j),h=Math.sin(j);var g=d*l,a=l*h,c=f*d;m.setElement(0,0,e*d);m.setElement(0,1,e*-h);m.setElement(0,2,i);m.setElement(1,0,g*i+h*f);m.setElement(1,1,a*-i+c);m.setElement(1,2,-l*e);m.setElement(2,0,c*-i+a);m.setElement(2,1,f*i*h+g);m.setElement(2,2,f*e);return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.ScalingNode=function(c){Cube.core.TransformNode.call(this,c);var a=c.x||0;var e=c.y||0;var d=c.z||0;this.vector=new Cube.core.math.Vector3(a,e,d);this.update()};Cube.core.ScalingNode.prototype=new Cube.core.TransformNode({});Cube.core.ScalingNode.prototype.constructor=Cube.core.ScalingNode;Cube.core.RotationXYZNode.prototype.set=function(a,d,c){if(!!a){this.vector.setX(a)}if(!!d){this.vector.setY(d)}if(!!c){this.vector.setZ(c)}this.setDirty();return this};Cube.core.ScalingNode.prototype.updateLocal=function(){var c=this.vector;var a=this.getLocalMatrix();a.setElement(0,0,c.x);a.setElement(1,1,c.y);a.setElement(2,2,c.z);return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.TranslationNode=function(c){Cube.core.TransformNode.call(this,c);var a=c.x||0;var e=c.y||0;var d=c.z||0;this.vector=new Cube.core.math.Vector3(a,e,d);this.update()};Cube.core.TranslationNode.prototype=new Cube.core.TransformNode({});Cube.core.TranslationNode.prototype.constructor=Cube.core.TranslationNode;Cube.core.TranslationNode.prototype.set=function(a,d,c){if(!!a){this.vector.setX(a)}if(!!d){this.vector.setY(d)}if(!!c){this.vector.setZ(c)}this.setDirty();return this};Cube.core.TranslationNode.prototype.updateLocal=function(){var c=this.vector;var a=this.getLocalMatrix();a.setElement(0,3,c.getX());a.setElement(1,3,c.getY());a.setElement(2,3,c.getZ());return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.FaceCameraNode=function(a){Cube.core.TransformNode.call(this,a);this.reference=a.reference};Cube.core.FaceCameraNode.prototype=new Cube.core.TransformNode({});Cube.core.FaceCameraNode.prototype.constructor=Cube.core.FaceCameraNode;Cube.core.FaceCameraNode.prototype.updateLocal=function(){this.getLocalMatrix().setRotationFrom(this.reference.getMatrix());return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.FaceObjectNode=function(a){Cube.core.TransformNode.call(this,a);this.reference=a.reference};Cube.core.FaceObjectNode.prototype=new Cube.core.TransformNode({});
Cube.core.FaceObjectNode.prototype.constructor=Cube.core.FaceObjectNode;Cube.core.FaceObjectNode.prototype.updateLocal=function(){this.getLocalMatrix().setRotationFrom(this.reference.getInvert());return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.TranslationCompensatorNode=function(a){Cube.core.TransformNode.call(this,a);var c=new Cube.core.TranslationCompensatorNode.BridgeNode({parent:a.reference,target:this});this.reference=a.reference;this.bridge=c};Cube.core.TranslationCompensatorNode.prototype=new Cube.core.TransformNode({});Cube.core.TranslationCompensatorNode.prototype.constructor=Cube.core.TranslationCompensatorNode;Cube.core.TranslationCompensatorNode.prototype.link=function(a){var c=new Cube.core.TranslationCompensatorNode.BridgeNode({parent:a,target:this});this.reference=a;this.bridge=c};Cube.core.TranslationCompensatorNode.prototype.unlink=function(){this.reference.removeChild(this.bridge);this.bridge=null;this.reference=null};Cube.core.TranslationCompensatorNode.prototype.updateLocal=function(){this.getLocalMatrix().setTranslationFrom(this.reference.getMatrix());return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.TranslationCompensatorNode.BridgeNode=function(a){Cube.core.TransformNode.call(this,a);this.target=a.target};Cube.core.TranslationCompensatorNode.BridgeNode.prototype=new Cube.core.TransformNode({});Cube.core.TranslationCompensatorNode.BridgeNode.prototype.constructor=Cube.core.TranslationCompensatorNode.BridgeNode;Cube.core.TranslationCompensatorNode.BridgeNode.prototype.updateLocal=function(){this.target.updateLocal()};Cube.core.TransformStackNode=function(a){Cube.core.TransformNode.call(this,a);this.transformations=new Cube.core.ArrayNode({});this.upStream=new Cube.core.TransformStackNode.UpStreamBridgeNode({target:this});this.downStream=new Cube.core.TransformStackNode.DownStreamBridgeNode({target:this})};Cube.core.TransformStackNode.prototype=new Cube.core.TransformNode({});Cube.core.TransformStackNode.prototype.constructor=Cube.core.TransformStackNode;Cube.core.TransformStackNode.prototype.push=function(a){a.setParent(this.upStream);a.addChild(this.downStream);this.transformations.push(a);return this};Cube.core.TransformStackNode.prototype.at=function(a){return this.transformations.at(a)};Cube.core.TransformStackNode.prototype.updateLocal=function(){this.transformations.nodes.reduce(function(a,c){c.updateLocal();return a.multiplyToSelf(c.getMatrix())},this.localMatrix.initToIdentity());return Cube.core.TransformNode.prototype.updateLocal.call(this)};Cube.core.TransformStackNode.prototype.compact=function(c){var a=this.transformations.nodes.reduce(function(e,f,d){if(d<c){return e}return e.multiplyToSelf(f.getMatrix())},(new Cube.core.math.Matrix4()).initToIdentity());this.transformations.clear(c).push(new Cube.core.TransformNode({matrix:a}));return this};Cube.core.TransformStackNode.DownStreamBridgeNode=function(a){Cube.core.TransformNode.call(this,a);this.target=a.target};Cube.core.TransformStackNode.DownStreamBridgeNode.prototype=new Cube.core.TransformNode({});Cube.core.TransformStackNode.DownStreamBridgeNode.prototype.constructor=Cube.core.TransformStackNode.DownStreamBridgeNode;Cube.core.TransformStackNode.DownStreamBridgeNode.prototype.setDirty=function(){this.target.setDirty()};Cube.core.TransformStackNode.UpStreamBridgeNode=function(a){Cube.core.TransformNode.call(this,a);this.target=a.target};Cube.core.TransformStackNode.UpStreamBridgeNode.prototype=new Cube.core.TransformNode({});Cube.core.TransformStackNode.UpStreamBridgeNode.prototype.constructor=Cube.core.TransformStackNode.UpStreamBridgeNode;Cube.core.TransformStackNode.UpStreamBridgeNode.prototype.isDirty=function(){return true};Cube.core.TransformStackNode.UpStreamBridgeNode.prototype.findUpdateRoot=function(){return this.target.findUpdateRoot()};Cube.core.ViewNode=function(a){Cube.core.TransformNode.call(this,a)};Cube.core.ViewNode.prototype=new Cube.core.TransformNode({});Cube.core.ViewNode.prototype.constructor=Cube.core.ViewNode;
Cube.core.ViewNode.prototype.accept=function(a){a.visitView(this)};Cube.core.ViewportNode=function(a){Cube.core.Node.call(this,a);this.x=a.x||0;this.y=a.y||0;this.w=a.width;this.h=a.height};Cube.core.ViewportNode.prototype=new Cube.core.Node({});Cube.core.ViewportNode.prototype.constructor=Cube.core.ViewportNode;Cube.core.ViewportNode.prototype.accept=function(a){a.visitViewport(this)};Cube.core.ViewportNode.prototype.getX=function(){return this.x};Cube.core.ViewportNode.prototype.getY=function(){return this.y};Cube.core.ViewportNode.prototype.getWidth=function(){return this.w};Cube.core.ViewportNode.prototype.getHeight=function(){return this.h};Cube.core.GeometryHelpers={buildSphere:function(ab,C){var F=30,c=(F+1)*(2*F+1),ai=F*2*F,W=ai*2,G=W*3;var A=[],d=[],T=[],g=[];C.begin(c,G);var s=-Math.PI/2,af=Math.PI/2,ae=(af-s)/F,P=0,D=2*Math.PI,aj=(D-P)/(2*F);for(var H=0;H<=F;++H){var l=s+H*(af-s)/F,S=Math.sin(l),f=Math.cos(l),X=(1-H/F);for(var ad=0;ad<=2*F;++ad){var aa=P+ad*(D-P)/(2*F),U=Math.cos(aa)*f,Q=Math.sin(aa)*f,Y=(1-ad/(F*2));C.addVertex(U*ab,S*ab,Q*ab);C.addNormal(U,S,Q);C.addColor(U,S,Q,1);C.addUV(Y,X);d.push([U*ab,S*ab,Q*ab]);A.push([U,S,Q]);T.push([Y,X])}}var p=F*2+1;for(var l=0;l<F;++l){var B=l*p;for(var aa=0;aa<F*2;++aa){var ar=B+aa,aq=B+aa+1,ao=B+p+aa,am=B+p+aa+1;C.addTriplet(ar,ao,aq);C.addTriplet(aq,ao,am);g.push([ar,ao,aq]);g.push([aq,ao,am])}}var aA=[],ax=[];for(var ak=0;ak<d.length;++ak){aA.push([0,0,0]);ax.push([0,0,0])}for(var ak=0;ak<g.length;++ak){var ap=g[ak],m=ap[0],k=ap[1],j=ap[2],az=d[m],aw=d[k],av=d[j],M=T[m],L=T[k],K=T[j],q=aw[0]-az[0],o=av[0]-az[0],aC=aw[1]-az[1],aB=av[1]-az[1],O=aw[2]-az[2],N=av[2]-az[2],au=L[0]-M[0],at=K[0]-M[0],J=L[1]-M[1],I=K[1]-M[1],ac=1/(au*I-at*J);var h=[(I*q-J*o)*ac,(I*aC-J*aB)*ac,(I*O-J*N)*ac];var E=[(au*o-at*q)*ac,(au*aB-at*aC)*ac,(au*N-at*O)*ac];var e=function(i,a){i[0]+=a[0];i[1]+=a[1];i[2]+=a[2]};e(aA[m],h);e(aA[k],h);e(aA[j],h);e(ax[m],E);e(ax[k],E);e(ax[j],E)}for(var ay=0;ay<d.length;++ay){var an=A[ay],ah=aA[ay],al=ax[ay],ag=new Cube.core.math.Vector3(an[0],an[1],an[2]),Z=new Cube.core.math.Vector3(ah[0],ah[1],ah[2]),I=new Cube.core.math.Vector3(al[0],al[1],al[2]);var R=Z.sub(ag.scale(ag.dot(Z))).normalizeSelf(),V=(ag.cross(Z).dot(I)<0)?-1:1;C.addTangent(R.x,R.y,R.z,V)}return C.end()},buildPlane:function(c,d){var i=[1,1,0,-1,1,0,-1,-1,0,1,-1,0];var f=[1,1,0,1,0,0,1,0];var h=[0,0,1,0,0,1,0,0,1,0,0,1];var a=[1,1,1,1,1,0,1,0,0,1,0,1];var j=[0,1,2,2,3,0];d.begin(i.length/3,j.length);var k;for(k=0;k<i.length/3;++k){var e=k*3;var g=k*2;d.addVertex(i[e]*c,i[e+1]*c,i[e+2]*c);d.addNormal(h[e],h[e+1],h[e+2]);d.addColor(a[e],a[e+1],a[e+2],1);d.addUV(f[g],f[g+1])}for(iterInd=0;iterInd<j.length/6;++iterInd){var e=iterInd*6;d.addTriplet(j[e],j[e+1],j[e+2]);d.addTriplet(j[e+3],j[e+4],j[e+5])}return d.end()},buildCube:function(c,e){var j=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1];var g=[1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0];var i=[0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1];var a=[1,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1];var k=[0,1,2,2,3,0,4,5,6,6,7,4,8,9,10,10,11,8,12,13,14,14,15,12,16,17,18,18,19,16,20,21,22,22,23,20];e.begin(j.length/3,k.length);for(var l=0;l<j.length/3;++l){var f=l*3,h=l*2;e.addVertex(j[f]*c,j[f+1]*c,j[f+2]*c);e.addNormal(i[f],i[f+1],i[f+2]);e.addColor(a[f],a[f+1],a[f+2],1);e.addUV(g[h],g[h+1])}for(var d=0;d<k.length/6;++d){var f=d*6;e.addTriplet(k[f],k[f+1],k[f+2]);e.addTriplet(k[f+3],k[f+4],k[f+5])}return e.end()}};Cube.core.MeshLoader=function(){};Cube.core.MeshLoader.prototype={};Cube.core.MeshLoader.prototype.constructor=Cube.core.MeshLoader;Cube.core.MeshLoader.prototype.build=function(d,e){var a=JSON.parse(d);
for(b in a.model.vertices.data){var c=(b=="position"?"vertex":b);e.createAttributeBuffer(c,a.model.vertices.data[b])}if(a.model.indices){e.createIndexBuffer("index",a.model.indices.data)}return e};Cube.core.ShaderNode=function(a){Cube.core.Node.call(this,a);this.manager=a.manager;this.name=a.name;this.program=null};Cube.core.ShaderNode.prototype=new Cube.core.Node({});Cube.core.ShaderNode.prototype.constructor=Cube.core.ShaderNode;Cube.core.ShaderNode.prototype.getProgram=function(){if(this.program==null){this.program=this.manager.createProgram(this.name)}return this.program};Cube.core.ShaderNode.prototype.getBindings=function(){if(this.program==null){this.program=this.manager.createProgram(this.name)}return this.manager.getBindings(this.name)};Cube.core.ShaderNode.prototype.getParamTypes=function(){return this.manager.getParamTypes(this.name)};Cube.core.ShaderNode.prototype.accept=function(a){a.visitShader(this)};Cube.core.TextureNode=function(a){Cube.core.Node.call(this,a);this.manager=a.manager;this.name=a.name;this.texture=null;this.ready=false};Cube.core.TextureNode.prototype=new Cube.core.Node({});Cube.core.TextureNode.prototype.constructor=Cube.core.TextureNode;Cube.core.TextureNode.prototype.getName=function(){return this.name};Cube.core.TextureNode.prototype.isReady=function(){return this.ready};Cube.core.TextureNode.prototype.getTexture=function(){return this.texture};Cube.core.TextureNode.prototype.accept=function(a){a.visitTexture(this)};Cube.core.ResourceLoader=function(){};Cube.core.ResourceLoader.prototype={};Cube.core.ResourceLoader.prototype.constructor=Cube.core.ResourceLoader;Cube.core.ResourceLoader.prototype.getResource=function(a){return document.getElementById(a).text};Cube.core.ShaderManager=function(a){this.engine=a.engine;this.gl=a.engine.gl;this.loader=a.loader;this.vertexs={};this.fragments={};this.programs={};this.shaders=this.createShaders(a.shaders)};Cube.core.ShaderManager.prototype={};Cube.core.ShaderManager.prototype.constructor=Cube.core.ShaderManager;Cube.core.ShaderManager.prototype.getShader=function(a){return this.shaders[a]};Cube.core.ShaderManager.prototype.getBindings=function(a){return this.programs[a].bindings};Cube.core.ShaderManager.prototype.getParamTypes=function(a){return this.programs[a].params};Cube.core.ShaderManager.prototype.createShaders=function(a){var f={};for(shaderName in a){var g=a[shaderName];var d={verts:[],frags:[],params:g.params,mappings:g.mappings};this.programs[shaderName]=d;for(var e=0;e<g.src.length;++e){var c=g.src[e];if(c.toLowerCase().indexOf("vertex")!=-1){d.verts.push(c)}else{if(c.toLowerCase().indexOf("fragment")!=-1){d.frags.push(c)}else{}}}f[shaderName]=new Cube.core.ShaderNode({manager:this,name:shaderName});if(g.preload){f[shaderName].getProgram()}}return f};Cube.core.ShaderManager.prototype.createVertexShader=function(c){var a=this.createShader(c,this.gl.VERTEX_SHADER);return a};Cube.core.ShaderManager.prototype.createFragmentShader=function(c){var a=this.createShader(c,this.gl.FRAGMENT_SHADER);return a};Cube.core.ShaderManager.prototype.createShader=function(d,a){var c=this.gl.createShader(a);this.gl.shaderSource(c,d);this.gl.compileShader(c);if(!this.gl.getShaderParameter(c,this.gl.COMPILE_STATUS)){var e=this.gl.getShaderInfoLog(c);this.gl.deleteShader(c);throw"Failed to compile shader ["+e+"]"}return c};Cube.core.ShaderManager.prototype.createProgram=function(d){var m=this.programs[d];var g=this.gl.createProgram();for(var f=0;f<m.verts.length;++f){var h=m.verts[f];if(this.vertexs[h]==null){this.vertexs[h]=this.createVertexShader(this.loader.getResource(h))}this.gl.attachShader(g,this.vertexs[h])}for(var f=0;f<m.frags.length;++f){var h=m.frags[f];if(this.fragments[h]==null){this.fragments[h]=this.createFragmentShader(this.loader.getResource(h))}this.gl.attachShader(g,this.fragments[h])}this.gl.linkProgram(g);var c=this.gl.getProgramParameter(g,this.gl.LINK_STATUS);if(!c){var j=this.gl.getProgramInfoLog(g);this.gl.deleteProgram(g);throw"Error in program linking ["+j+"]"
}this.gl.useProgram(g);var l={uniforms:{},attributes:{}};for(var d in this.engine.getRenderer().shaderParameters.uniforms){var k=this.gl.getUniformLocation(g,d);if(!k&&m.mappings){var a=m.mappings.uniforms[d];k=this.gl.getUniformLocation(g,a)}if(k){l.uniforms[d]=k}}for(var d in this.engine.getRenderer().shaderParameters.attributes){var k=this.gl.getAttribLocation(g,d);if(k<0&&m.mappings){var a=m.mappings.attributes[d];k=this.gl.getAttribLocation(g,a)}if(k>=0){l.attributes[d]=k}}for(var e in m.params.uniforms){var k=this.gl.getUniformLocation(g,e);if(k){l.uniforms[e]=k}}m.bindings=l;return g};Cube.core.TextureManager=function(a){this.engine=a.engine;this.gl=a.engine.gl;this.textures={};this.desc={};for(var c in a.desc){var d=a.desc[c];this.desc[c]=d;this.textures[c]=new Cube.core.TextureNode({manager:this,name:c})}};Cube.core.TextureManager.prototype={};Cube.core.TextureManager.prototype.constructor=Cube.core.TextureManager;Cube.core.TextureManager.prototype.getTexture=function(a){var c=this.textures[a];if(!!c&&!c.isReady()){this.loadTexture(c)}return c};Cube.core.TextureManager.prototype.loadTexture=function(d){var c=new Image();var a=this;var f=a.gl;var e=this.desc[d.getName()];c.onload=function(){var i=e.quality==Cube.core.Renderer.prototype.textureQuality.POOR?f.NEAREST:f.LINEAR;var g=e.quality==Cube.core.Renderer.prototype.textureQuality.POOR?f.NEAREST:(e.quality==Cube.core.Renderer.prototype.textureQuality.GOOD?f.LINEAR:f.LINEAR_MIPMAP_NEAREST);var h=f.createTexture();f.bindTexture(f.TEXTURE_2D,h);f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL,(e.flip==true));f.texImage2D(f.TEXTURE_2D,0,f.RGBA,f.RGBA,f.UNSIGNED_BYTE,c);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,i);f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,g);if(e.quality==Cube.core.Renderer.prototype.textureQuality.BEST){f.generateMipmap(f.TEXTURE_2D)}f.bindTexture(f.TEXTURE_2D,null);d.texture=h;d.ready=true};c.src=e.res};Cube.core.MaterialBindingNode=function(a){Cube.core.Node.call(this,a);this.name=a.name;this.type=a.type;this.value=a.value};Cube.core.MaterialBindingNode.prototype=new Cube.core.Node({});Cube.core.MaterialBindingNode.prototype.constructor=Cube.core.MaterialBindingNode;Cube.core.MaterialBindingNode.prototype.accept=function(a){a.visitMaterialBinding(this)};Cube.core.MaterialBindingNode.prototype.getParameterName=function(){return this.name};Cube.core.MaterialBindingNode.prototype.getParameterType=function(){return this.type};Cube.core.MaterialBindingNode.prototype.getParameterValue=function(){return this.value};Cube.core.MaterialBindingNode.prototype.setParameterValue=function(a){this.value=a;return this};Cube.core.MaterialNode=function(a){Cube.core.Node.call(this,a);this.transparent=a.transparent;this.insideOut=a.insideOut;this.nodes=new Cube.core.ArrayNode({});this.nodesByName={};this.nodes.push(a.shader);for(var c in a.bindings){var d=new Cube.core.MaterialBindingNode({name:c,type:a.shader.getParamTypes().uniforms[c],value:a.bindings[c]});this.nodes.push(d);this.nodesByName[c]=d}};Cube.core.MaterialNode.prototype=new Cube.core.Node({});Cube.core.MaterialNode.prototype.constructor=Cube.core.MaterialNode;Cube.core.MaterialNode.prototype.getBinding=function(a){return this.nodesByName[a]};Cube.core.MaterialNode.prototype.isTransparent=function(a){return this.transparent};Cube.core.MaterialNode.prototype.isInsideOut=function(a){return this.insideOut};Cube.core.MaterialNode.prototype.accept=function(a){a.visitMaterial(this);this.nodes.accept(a)};Cube.core.LightAmbiantNode=function(a){this.color=a.color||[0,0,0,0]};Cube.core.LightAmbiantNode.prototype=new Cube.core.Node({});Cube.core.LightAmbiantNode.prototype.constructor=Cube.core.LightAmbiantNode;Cube.core.LightAmbiantNode.prototype.getColor=function(){return this.color};Cube.core.LightAmbiantNode.prototype.accept=function(a){a.visitLightAmbiant(this)};Cube.core.LightDirectionalNode=function(a){this.color=a.color||[0,0,0,0];this.direction=a.direction||[0,-1,0,0]};Cube.core.LightDirectionalNode.prototype=new Cube.core.Node({});
Cube.core.LightDirectionalNode.prototype.constructor=Cube.core.LightDirectionalNode;Cube.core.LightDirectionalNode.prototype.getColor=function(){return this.color};Cube.core.LightDirectionalNode.prototype.getDirection=function(){return this.direction};Cube.core.LightDirectionalNode.prototype.accept=function(a){a.visitLightDirectional(this)};Cube.core.LightPositionalNode=function(a){this.color=a.color||[0,0,0,0];this.position=a.position||[0,1,0,1]};Cube.core.LightPositionalNode.prototype=new Cube.core.Node({});Cube.core.LightPositionalNode.prototype.constructor=Cube.core.LightPositionalNode;Cube.core.LightPositionalNode.prototype.getColor=function(){return this.color};Cube.core.LightPositionalNode.prototype.getPosition=function(){return this.position};Cube.core.LightPositionalNode.prototype.accept=function(a){a.visitLightPositional(this)};Cube.core.CameraNode=function(a){Cube.core.Node.call(this,a);this.opticNode=a.optic;this.viewNode=new Cube.core.ViewNode({parent:a.parent});this.viewNode.update()};Cube.core.CameraNode.prototype=new Cube.core.Node({});Cube.core.CameraNode.prototype.constructor=Cube.core.CameraNode;Cube.core.CameraNode.prototype.getTransform=function(){return this.viewNode};Cube.core.CameraNode.prototype.accept=function(a){a.visitOptic(this.opticNode);a.visitView(this.viewNode)};Cube.core.CameraNode.prototype.update=function(){this.viewNode.update()};Cube.core.ObjectEnlighterNode=function(a){this.scene=a.scene||null};Cube.core.ObjectEnlighterNode.prototype=new Cube.core.Node({});Cube.core.ObjectEnlighterNode.prototype.constructor=Cube.core.ObjectEnlighterNode;Cube.core.ObjectEnlighterNode.prototype.setScene=function(a){this.scene=a};Cube.core.ObjectEnlighterNode.prototype.accept=function(a){this.scene.getLights().accept(a)};Cube.core.Object=function(a){Cube.core.Node.call(this,a);this.enlighter=new Cube.core.ObjectEnlighterNode({});this.nodes=new Cube.core.ArrayNode({nodes:[a.material,this.enlighter,a.transformation,a.geometry]})};Cube.core.Object.prototype=new Cube.core.Node({});Cube.core.Object.prototype.constructor=Cube.core.Object;Cube.core.Object.prototype.setScene=function(a){this.enlighter.setScene(a)};Cube.core.Object.prototype.accept=function(a){this.nodes.accept(a)};Cube.core.LightSourceNode=function(a){this.light=a.light;this.transform=a.transform||(new Cube.core.TransformNode({})).update()};Cube.core.LightSourceNode.prototype=new Cube.core.Node({});Cube.core.LightSourceNode.prototype.constructor=Cube.core.LightSourceNode;Cube.core.LightSourceNode.prototype.accept=function(a){this.transform.accept(a);this.light.accept(a)};Cube.core.Scene=function(a){this.activeViewport=new Cube.core.ArrayNode({});this.activeCamera=new Cube.core.ArrayNode({});this.lights=new Cube.core.ArrayNode({});this.objects=new Cube.core.ArrayNode({});this.tree=new Cube.core.ArrayNode({nodes:[this.activeViewport,this.activeCamera,this.objects]})};Cube.core.Scene.prototype={};Cube.core.Scene.prototype.constructor=Cube.core.Scene;Cube.core.Scene.prototype.setViewport=function(a){this.activeViewport.clear();this.activeViewport.push(a)};Cube.core.Scene.prototype.setCamera=function(a){this.activeCamera.clear();this.activeCamera.push(a)};Cube.core.Scene.prototype.addLight=function(a){this.lights.push(a)};Cube.core.Scene.prototype.addObject=function(a){a.setScene(this);this.objects.push(a)};Cube.core.Scene.prototype.getLights=function(){return this.lights};Cube.core.Scene.prototype.visit=function(a){this.tree.accept(a)};Cube.core.Engine=function(a){var c=a.canvas;var d=c.getContext("experimental-webgl",{alpha:true,antialias:true,stencil:true});if(!d){throw"failed to created WebGL context"}this.canvas=c;this.gl=d;this.renderer=new Cube.core.Renderer({gl:d})};Cube.core.Engine.prototype.constructor=Cube.core.Engine;Cube.core.Engine.prototype.getRenderer=function(){return this.renderer};Cube.core.Renderer=function(a){this.gl=a.gl;this.defaultClearFlags=0;this.mappings=null;this.projectionTransfo=null;this.viewTransfo=new Cube.core.math.Matrix4();
this.viewInvertTransposeTransfo=new Cube.core.math.Matrix4();this.modelViewTransfo=new Cube.core.math.Matrix4();this.modelViewInvertTransposeTransfo=new Cube.core.math.Matrix4();this.bufferFactoryFunc=null;this.nextTextureUnit=0;this.lightsUniforms=[];this.nextLight=0;this.transparentMode=false;this.insideOutMode=false;this.setup()};Cube.core.Renderer.prototype={};Cube.core.Renderer.prototype.mode={POINT:"point",ELEMENT:"element"};Cube.core.Renderer.prototype.textureQuality={POOR:"poor",GOOD:"good",BEST:"best"};Cube.core.Renderer.prototype.shaderLightSubParameters={type:"type",color:"color",direction:"direction",position:"position"};Cube.core.Renderer.prototype.shaderParameters={uniforms:{matrixProjection:"matrixProjection",matrixModel:"matrixModel",matrixNormal:"matrixNormal",matrixView:"matrixView",lightsCount:"lightsCount"},attributes:{vertex:"vertex",normal:"normal",color:"color",uv:"uv",tangent:"tangent"}};Cube.core.Renderer.prototype.shaderParameterTypes={FLOAT:"float",VEC4:"vec4",TEXTURE2D:"texture2D"};Cube.core.Renderer.prototype.lightTypes={AMBIANT:1,DIRECTIONAL:2,POINT:3,SPOT:4};Cube.core.Renderer.prototype.constructor=Cube.core.Renderer;Cube.core.Renderer.prototype.getBufferFactory=function(){return this.bufferFactoryFunc};Cube.core.Renderer.prototype.setup=function(){var a=this.shaderParameters.uniforms;var e=0;for(e=0;e<2;++e){var d={};this.lightsUniforms[e]=d;for(pKey in this.shaderLightSubParameters){var c="lights["+e+"]."+this.shaderLightSubParameters[pKey];a[c]=c;d[pKey]=c}}this.bufferFactoryFunc=(function(f){return function(i,j){var g=f.createBuffer();var h=i?f.ELEMENT_ARRAY_BUFFER:f.ARRAY_BUFFER;f.bindBuffer(h,g);f.bufferData(h,j,f.STATIC_DRAW);return g}})(this.gl);this.defaultClearFlags=this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT|this.gl.STENCIL_BUFFER_BIT;this.gl.clearColor(0,0,0,1);this.gl.enable(this.gl.DEPTH_TEST);this.gl.enable(this.gl.CULL_FACE);this.clear()};Cube.core.Renderer.prototype.setTransparentMode=function(a){this.transparentMode=!!a};Cube.core.Renderer.prototype.setInsideOutMode=function(a){this.insideOutMode=!!a};Cube.core.Renderer.prototype.clear=function(a){var c=0;if(!!a){if(!!a.color){c|=this.gl.COLOR_BUFFER_BIT}if(!!a.depth){c|=this.gl.DEPTH_BUFFER_BIT}if(!!a.stencil){c|=this.gl.STENCIL_BUFFER_BIT}}else{c=this.defaultClearFlags}this.gl.clear(c);this.deactivateAllTextureUnits();this.deactivateAllLights()};Cube.core.Renderer.prototype.deactivateAllTextureUnits=function(){for(var a=0;a<this.nextTextureUnit;++a){this.gl.activeTexture(this.gl.TEXTURE0+a);this.gl.bindTexture(this.gl.TEXTURE_2D,null)}this.nextTextureUnit=0};Cube.core.Renderer.prototype.deactivateAllLights=function(){this.nextLight=0};Cube.core.Renderer.prototype.setViewport=function(a,e,c,d){this.gl.viewport(a,e,c,d)};Cube.core.Renderer.prototype.loadMappings=function(a){this.mappings=a;return this};Cube.core.Renderer.prototype.loadProjectionTransformation=function(a){this.projectionTransfo=a};Cube.core.Renderer.prototype.loadViewTransformation=function(a){a.copyTo(this.modelViewTransfo);this.modelViewTransfo.invertTo(this.modelViewInvertTransposeTransfo);this.modelViewInvertTransposeTransfo.transposeToSelf();this.modelViewTransfo.copyTo(this.viewTransfo);this.modelViewInvertTransposeTransfo.copyTo(this.viewInvertTransposeTransfo)};Cube.core.Renderer.prototype.loadNormalTransformation=function(a){this.viewInvertTransposeTransfo.copyTo(this.modelViewInvertTransposeTransfo);this.modelViewInvertTransposeTransfo.multiplyToSelf(a);var c=this.modelViewInvertTransposeTransfo.getRawData();this.gl.uniformMatrix4fv(this.mappings.uniforms[this.shaderParameters.uniforms.matrixNormal],false,c)};Cube.core.Renderer.prototype.loadModelTransformation=function(a){this.viewTransfo.copyTo(this.modelViewTransfo);this.modelViewTransfo.multiplyToSelf(a);var c=this.modelViewTransfo.getRawData();this.gl.uniformMatrix4fv(this.mappings.uniforms[this.shaderParameters.uniforms.matrixModel],false,c)};Cube.core.Renderer.prototype.renderBufferSet=function(c,a){this.gl.uniform1i(this.mappings.uniforms[this.shaderParameters.uniforms.lightsCount],this.nextLight);
if(!a.vertexBuffer){return}if(c==this.ELEMENT&&!a.indexBuffer){return}if(!!a.normalBuffer){if(this.mappings.attributes[this.shaderParameters.attributes.normal]!=undefined){this.gl.enableVertexAttribArray(this.mappings.attributes[this.shaderParameters.attributes.normal]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a.normalBuffer.data);this.gl.vertexAttribPointer(this.mappings.attributes[this.shaderParameters.attributes.normal],3,this.gl.FLOAT,false,0,0)}}if(!!a.colorBuffer){if(this.mappings.attributes[this.shaderParameters.attributes.color]!=undefined){this.gl.enableVertexAttribArray(this.mappings.attributes[this.shaderParameters.attributes.color]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a.colorBuffer.data);this.gl.vertexAttribPointer(this.mappings.attributes[this.shaderParameters.attributes.color],4,this.gl.FLOAT,false,0,0)}}if(!!a.uvBuffer){if(this.mappings.attributes[this.shaderParameters.attributes.uv]!=undefined){this.gl.enableVertexAttribArray(this.mappings.attributes[this.shaderParameters.attributes.uv]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a.uvBuffer.data);this.gl.vertexAttribPointer(this.mappings.attributes[this.shaderParameters.attributes.uv],2,this.gl.FLOAT,false,0,0)}}if(!!a.tangentBuffer){if(this.mappings.attributes[this.shaderParameters.attributes.tangent]!=undefined){this.gl.enableVertexAttribArray(this.mappings.attributes[this.shaderParameters.attributes.tangent]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a.tangentBuffer.data);this.gl.vertexAttribPointer(this.mappings.attributes[this.shaderParameters.attributes.tangent],4,this.gl.FLOAT,false,0,0)}}this.gl.enableVertexAttribArray(this.mappings.attributes[this.shaderParameters.attributes.vertex]);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a.vertexBuffer.data);this.gl.vertexAttribPointer(this.mappings.attributes[this.shaderParameters.attributes.vertex],3,this.gl.FLOAT,false,0,0);if(this.transparentMode){this.gl.enable(this.gl.BLEND);this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA);this.gl.depthMask(false)}if(this.transparentMode){this.gl.frontFace(this.gl.CW);if(c==this.mode.ELEMENT){this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,a.indexBuffer.data);this.gl.drawElements(this.gl.TRIANGLES,a.indexBuffer.size,this.gl.UNSIGNED_SHORT,0)}else{this.gl.drawArrays(this.gl.POINTS,0,a.vertexBuffer.size/3)}this.gl.frontFace(this.gl.CCW)}if(!this.insideOutMode){if(c==this.mode.ELEMENT){this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,a.indexBuffer.data);this.gl.drawElements(this.gl.TRIANGLES,a.indexBuffer.size,this.gl.UNSIGNED_SHORT,0)}else{this.gl.drawArrays(this.gl.POINTS,0,a.vertexBuffer.size/3)}}this.gl.disable(this.gl.BLEND);this.gl.depthMask(true)};Cube.core.Renderer.prototype.useShader=function(a){this.gl.useProgram(a.getProgram());this.loadMappings(a.getBindings());this.loadPerFrameData()};Cube.core.Renderer.prototype.useTexture=function(a){if(this.mappings.uniforms[this.shaderParameters.uniforms.texture0]){this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,a.getTexture())}};Cube.core.Renderer.prototype.bindShaderParamWithValue=function(a,c,d){var e=this.mappings.uniforms[a];if(!e){return}if(c==this.shaderParameterTypes.FLOAT){this.gl.uniform1f(e,d)}else{if(c==this.shaderParameterTypes.VEC4){this.gl.uniform4fv(e,d)}else{if(c==this.shaderParameterTypes.TEXTURE2D){this.gl.activeTexture(this.gl.TEXTURE0+this.nextTextureUnit);this.gl.bindTexture(this.gl.TEXTURE_2D,d.getTexture());this.gl.uniform1i(e,this.nextTextureUnit);this.nextTextureUnit=this.nextTextureUnit+1}else{}}}};Cube.core.Renderer.prototype.loadPerFrameData=function(){this.gl.uniformMatrix4fv(this.mappings.uniforms[this.shaderParameters.uniforms.matrixProjection],false,this.projectionTransfo.getRawData());this.gl.uniformMatrix4fv(this.mappings.uniforms[this.shaderParameters.uniforms.matrixView],false,this.modelViewTransfo.getRawData())};Cube.core.Renderer.prototype.addAmbiantLight=function(a){var c=this.lightsUniforms[this.nextLight];if(!c){return}this.gl.uniform1i(this.mappings.uniforms[c.type],this.lightTypes.AMBIANT);
this.gl.uniform4fv(this.mappings.uniforms[c.color],a.getColor());this.nextLight=this.nextLight+1};Cube.core.Renderer.prototype.addDirectionalLight=function(a){var c=this.lightsUniforms[this.nextLight];if(!c){return}this.gl.uniform1i(this.mappings.uniforms[c.type],this.lightTypes.DIRECTIONAL);this.gl.uniform4fv(this.mappings.uniforms[c.color],a.getColor());this.gl.uniform3fv(this.mappings.uniforms[c.direction],this.modelViewInvertTransposeTransfo.transformRawVector4(a.getDirection()));this.nextLight=this.nextLight+1};Cube.core.Renderer.prototype.addPositionalLight=function(a){var c=this.lightsUniforms[this.nextLight];if(!c){return}this.gl.uniform1i(this.mappings.uniforms[c.type],this.lightTypes.POINT);this.gl.uniform4fv(this.mappings.uniforms[c.color],a.getColor());this.gl.uniform3fv(this.mappings.uniforms[c.position],this.modelViewTransfo.transformRawVector4(a.getPosition()));this.nextLight=this.nextLight+1};Cube.anim={};Cube.anim.lerp=function(d,c,a){return d+(c-d)*a};Cube.anim.clamp=function(d,c,a){if(d<c){return c}else{if(d>a){return a}}return d};Cube.anim.lerpa=function(f,e,a){var d=[];for(var c=0;c<f.length;++c){d[c]=Cube.anim.lerp(f[c],e[c],a)}return d};Cube.anim.Range=function(c,a){this.rangeFunc=null;if(typeof(c)!=typeof(a)){throw"types differ"}if(typeof(c)=="number"){this.rangeFunc=function(d){if(d<0){return c}else{if(d>1){return a}}return Cube.anim.lerp(c,a,d)}}else{if(typeof(c)=="object"&&c instanceof Array&&c.length==a.length){this.rangeFunc=function(d){if(d<0){return c.slice(0)}else{if(d>1){return a.slice(0)}}return Cube.anim.lerpa(c,a,d)}}else{throw"unsupported type"}}};Cube.anim.Range.prototype={};Cube.anim.Range.prototype.constructor=Cube.anim.Range;Cube.anim.Range.prototype.at=function(a){return this.rangeFunc(a)};Cube.anim.Scale=function(c){var d=c.length-1;var f=1/d;this.rangeLength=f;this.rangeCount=d;this.ranges=[];for(var e=0;e<d;++e){var a=new Cube.anim.Range(c[e],c[e+1]);this.ranges.push(a)}};Cube.anim.Scale.prototype={};Cube.anim.Scale.prototype.constructor=Cube.anim.Scale;Cube.anim.Scale.prototype.at=function(a){var d=Math.floor(a/this.rangeLength);var c=(a*this.rangeCount)-d;return this.ranges[d].at(c)};Cube.anim.Animator=function(a){this.range=a.range;this.delay=a.delay;this.current=0;this.sinks=[]};Cube.anim.Animator.prototype={};Cube.anim.Animator.prototype.constructor=Cube.anim.Animator;Cube.anim.Animator.prototype.animate=function(a){this.current+=a;this.current%=this.delay;var c=this.range.at(this.current/this.delay);this.sinks.forEach(function(d){d(c)});return c};Cube.anim.Animator.prototype.bind=function(a){this.sinks.push(a);return this};